trigger:
  branches:
    include:
      - main

pool:
  name: 'COMP367001-WIN-FOYSAL'

variables:
  buildConfiguration: 'Release'

stages:
  - stage: Checkout
    displayName: 'Checkout Source Code'
    jobs:
      - job: CheckoutJob
        steps:
          - checkout: self
            clean: true

  - stage: Build
    displayName: 'Build Stage'
    dependsOn: Checkout
    jobs:
      - job: BuildJob
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: 'sdk'
              version: '8.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - script: dotnet build ManuelToleran_MVC_AgileProcess/ManuelToleran_MVC_AgileProcess.sln --configuration $(buildConfiguration)
            displayName: 'Build the project'

  - stage: CodeAnalysis
    displayName: 'Code Analysis (SonarQube)'
    dependsOn: Build
    jobs:
      - job: AnalysisJob
        steps:
          - script: echo "This is a placeholder for SonarQube analysis."
            displayName: 'Run SonarQube (Mocked)'

  - stage: Test
    displayName: 'Test Stage'
    dependsOn: Build
    jobs:
      - job: TestJob
        steps:
          - script: dotnet test ManuelToleran_MVC_AgileProcess/ManuelToleran_MVC_AgileProcess.sln --configuration $(buildConfiguration) --collect:"XPlat Code Coverage"
            displayName: 'Run unit tests and collect coverage'

  - stage: Artifact
    displayName: 'Publish Artifact'
    dependsOn: Test
    jobs:
      - job: ArtifactJob
        steps:
          # üì¶ Publish the project
          - script: dotnet publish ManuelToleran_MVC_AgileProcess/ManuelToleran_MVC_AgileProcess.sln --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish
            displayName: 'Publish the project'

          # üóúÔ∏è Create a ZIP file
          - task: PowerShell@2
            displayName: 'Create ZIP package'
            inputs:
              targetType: 'inline'
              script: |
                $source = "$(Build.ArtifactStagingDirectory)\publish"
                $zipPath = "$(Build.ArtifactStagingDirectory)\App.zip"
                Add-Type -AssemblyName System.IO.Compression.FileSystem
                [System.IO.Compression.ZipFile]::CreateFromDirectory($source, $zipPath)

          # üöÄ Publish the ZIP file
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)\App.zip'
              ArtifactName: 'drop'
              publishLocation: 'Container'
